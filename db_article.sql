/*
Navicat MySQL Data Transfer

Source Server         : 痴学少年
Source Server Version : 50173
Source Host           : qdm19508150.my3w.com:3306
Source Database       : qdm19508150_db

Target Server Type    : MYSQL
Target Server Version : 50173
File Encoding         : 65001

Date: 2015-12-07 21:48:31
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `db_article`
-- ----------------------------
DROP TABLE IF EXISTS `db_article`;
CREATE TABLE `db_article` (
  `aid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(155) NOT NULL DEFAULT '',
  `time` int(10) unsigned NOT NULL DEFAULT '0',
  `thumb` varchar(200) NOT NULL DEFAULT '',
  `content` text,
  `type` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `info` varchar(155) NOT NULL DEFAULT '',
  `cid` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`aid`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of db_article
-- ----------------------------
INSERT INTO `db_article` VALUES ('1', '关于我，关于这个网站', '1447162689', 'img_14471626899963.jpg', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 本人，大学狗一枚，狗粮吃的很好，白白胖胖。语文不是很好，也不知道怎么写这第一篇文章。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我自己也没什么介绍的，那就介绍一下这个网站吧。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本站，是由在Yii框架下开发的。从10月份开始自学Yii到11月份完成这个网站的开发，是比较慢的。学习的时候有不懂得的问题，也是通过QQ咨询了很多大神。网站的备案等也是消耗了很多时间。在此，感谢那些教导过我的各位大神，感谢感谢。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前台是用的别人的模板，是从这里下载的<a href=\"http://www.yangqq.com/about.html。\" _src=\"http://www.yangqq.com/about.html。\">http://www.yangqq.com/about.html。</a>&nbsp;&nbsp; 谢谢您的模板，我很喜欢这个模板，个人感觉挺炫酷的。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后台的逻辑功能还是浪费了我90%的时间，我认为这也是最重要的一部分。后台才是整个网站的核心。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果大家发现网站有什么bug，或者有什么问题，又可以联系我。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是我的微博<img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151110/14471626568832.png\" title=\"img-8baa9bf2b907d342755c6efa0ee8e809_qrcode_2345看图王.png\" style=\"float: right;\"/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;谢谢。。<br/></p>', '1', '网站初步建立，还是有很多问题的，在以后的日子中会逐渐完善', '23');
INSERT INTO `db_article` VALUES ('2', '用户注册', '1447163366', 'img_14471633663794.jpg', '<p>这是index.php。也就是显示出来的第一页</p><p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</p><p>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</p><p>&lt;head&gt;</p><p>&lt;title&gt;用户注册&lt;/title&gt;</p><p>&lt;/head&gt;</p><p><br/></p><p>&lt;body bgcolor=&quot;#ffffff&quot;&gt;</p><p>&lt;p align=&#39;center&#39;&gt;用户注册&lt;/p&gt;</p><p>&lt;form action=&quot;chuli.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; name=&quot;forml&quot; id=&quot;forml&quot;&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;table width=&quot;563&quot; border=&quot;1&quot; align=&quot;center&quot;&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td width=&quot;81&quot;&gt;姓 &nbsp;名&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td colspan=&quot;2&quot;&gt;&lt;label&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>&lt;input type=&quot;text&quot; name=&quot;user&quot; id=&quot;user&quot;/&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>&lt;/label&gt; &nbsp; &nbsp; *必填上4-16个字符&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td width=&quot;8&quot;&gt; &amp;nbsp;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;电子邮箱：&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td colspan=&quot;2&quot;&gt;&lt;label&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>&lt;input type=&quot;text&quot; name=&quot;email&quot; id=&quot;email&quot;/&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>*必填上合法的电子邮箱地址&lt;/label&gt;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;用户密码：&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td colspan=&quot;2&quot;&gt;&lt;label&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>&lt;input type=&quot;password&quot; name=&quot;pass1&quot; id=&quot;pass1&quot;/&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>*与确认密码保持一致&lt;/label&gt;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;确认密码：&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td colspan=&quot;2&quot;&gt;&lt;label&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>&lt;input type=&quot;password&quot; name=&quot;pass2&quot; id=&quot;pass2&quot;/&gt;&lt;/label&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td width=&quot;153&quot;&gt;&lt;input type=&quot;submit&quot; name=&quot;button&quot; id=&quot;button&quot; value=&quot;填好了！&quot;/&gt;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td width=&quot;302&quot;&gt;&lt;input type=&quot;reset&quot; name=&quot;button2&quot; id=&quot;button2&quot; value=&quot;又出错了！&quot;/&gt;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;/table&gt;</p><p>&lt;/body&gt;</p><p><br/></p><p>&lt;/html&gt;</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p>这是chuli.php。也就是点击“我填完了”之后他弹出的页面。</p><p>&lt;html&gt;</p><p>&lt;head&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;title&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span> &lt;?php</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span> echo $_POST[&#39;user&#39;];</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span> &nbsp;?&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;/title&gt;</p><p>&lt;/head&gt;</p><p>&lt;link href=&quot;mystyle.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;</p><p>&lt;body&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;?php</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function valid_email($email){//这里验证邮箱的信息是否是正确的</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if(preg_match(&quot;/^[0-9a-zA-Z]+(?:[_-][a-z0-9-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*.</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">							</span>[a-zA-Z]+$/i&quot;, $email))//这是验证的核心代码</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>return true;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>else</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>return false;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function sendtosql($user,$pass1,$email){//这个函数是把用户的注册信息发送给数据库</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>$con = mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;&quot;);//这里是链接数据库</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if (!$con){//如果无法连接数据库，就会返回信息</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>die(&#39;Could not connect: &#39; . mysql_error());</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}else{</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>mysql_select_db(&quot;user&quot;, $con);//在数据库中插入信息</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>$sql=&quot;INSERT INTO user (name, email, password)</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">				</span>VALUES(&#39;$user&#39;,&#39;$email&#39;,&#39;$pass1&#39;)&quot;;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>mysql_query($sql,$con);&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$user=$_POST[&quot;user&quot;];</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$email=$_POST[&quot;email&quot;];</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$pass1=$_POST[&quot;pass1&quot;];</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$pass2=$_POST[&quot;pass2&quot;];</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>if(!$user||!$email||!$pass1){//验证是否所有的信息都填了</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>echo &quot;信息填写不完整&lt;a href=&#39;index.php&#39;&gt;返回&lt;/a&gt;&quot;;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>elseif(strlen($user)&lt;4 || strlen($user)&gt;16){</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>echo &quot;姓名字段的长度不够&lt;a href=&#39;index.php&#39;&gt;返回&lt;/a&gt;&quot;;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>elseif(!valid_email($email)){</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>echo &quot;电子邮件地址不正确！请确认后填写!&lt;a href=&#39;index.php&#39;&gt;返回&lt;/a&gt;&quot;;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>elseif($pass1!=$pass2){</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>echo &quot;两次输入的密码不一致！&lt;a href=&#39;index.php&#39;&gt;返回&lt;/a&gt;&quot;;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>else{</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>sendtosql($user,$pass1,$email);</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>?&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;table width=&quot;465&quot; height=&quot;286&quot; border=&quot;1&quot; align=&quot;center&quot;&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;姓 &nbsp; 名：&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td colspan&quot;2&quot;&gt;&lt;?php echo $_POST[&quot;user&quot;]?&gt;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;电子邮箱：&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td colspan&quot;2&quot;&gt;&lt;?php echo $_POST[&quot;email&quot;] ?&gt;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt;密 &nbsp; 码：&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td colspan&quot;2&quot;&gt;&lt;?php echo $pass1 ?&gt;&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>&lt;td&gt; 注 册 成 功&lt;/td&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>&lt;/tr&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;/table&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;?php</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>?&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p><br/></p><p>下载地址&nbsp;<a href=\"http://pan.baidu.com/s/1jGHCJ34\" _src=\"http://pan.baidu.com/s/1jGHCJ34\">http://pan.baidu.com/s/1jGHCJ34</a> </p><p>密码&nbsp;6khb</p><p><br/></p>', '1', '这是一个用户注册的PHP，请不要随便修改文件名，因为index.php中的action是通过文件名来获取chuli.php文件的\r\n。你可以到我提供的地址下载源码。', '26');
INSERT INTO `db_article` VALUES ('3', '常用颜色RGB、灰度值', '1447173522', 'img_14471735225165.jpg', '<p><img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151111/14471734357393.png\" style=\"float:none;\" title=\"捕获.PNG\"/></p><p><img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151111/1447173435522.png\" style=\"float:none;\" title=\"捕获1.PNG\"/></p><p><img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151111/14471734357616.png\" style=\"float:none;\" title=\"捕获2.PNG\"/></p><p><img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151111/14471734361241.png\" style=\"float:none;\" title=\"捕获3.PNG\"/></p><p><img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151111/14471734363754.png\" style=\"float:none;\" title=\"捕获4.PNG\"/></p><p><img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151111/14471734361905.png\" style=\"float:none;\" title=\"捕获5.PNG\"/></p><p><img src=\"/mmm/assets/afterlogin/org/ueditor/php/upload/20151111/14471734368371.png\" style=\"float:none;\" title=\"捕获6.PNG\"/></p><p><br/></p><p><br/></p>', '1', '有关颜色的#值，希望对大家有帮助', '23');
INSERT INTO `db_article` VALUES ('4', 'mysql无法进入root账户', '1447343916', 'img_14473439169500.jpg', '<p><span style=\"color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px;  background-color: rgb(245, 245, 245);\">要先退出mysql的命令行界面，然后运行windows的命令行，进入安装路径下的bin文件夹，然后有两种方法：</span><br style=\"box-sizing: content-box; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(245, 245, 245);\"/><span style=\"color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px;  background-color: rgb(245, 245, 245);\">方法1：mysql&nbsp;-u用户名&nbsp;-p密码（注意-u和用户名及-p和密码间均无空格，密码没有单引号）</span><br style=\"box-sizing: content-box; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(245, 245, 245);\"/><span style=\"color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px;  background-color: rgb(245, 245, 245);\">方法2：mysql&nbsp;-u&nbsp;用户名&nbsp;-p&nbsp;数据库名&nbsp;回车后输入用户密码即可</span></p><p><br/></p><p>转载自：http://bbs.csdn.net/topics/120008071</p>', '1', '这是在登录mysql时主要使用。节省了很多麻烦', '23');
INSERT INTO `db_article` VALUES ('5', '已知前序序列和中序序列，求后续，并打印二叉树', '1447462193', 'img_14474621939266.jpg', '<p><strong><span style=\"font-size:19px;font-family:宋体\">算法思想</span></strong></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">根据先序遍历的思想，先序序列的第一个字母（A）一定是树的根，又根据终须遍历的定义，字母(A)把中序序列分成两个子序列：（（HBDF）A（EKCGI））,这样可得到对二叉树的第一次近似。然后，取先序序列的下一个字母B，它出现在A的左子树中，应是A的左子树的根，它把中序子序列（HBDF）又划分为两个子序列：（（H）B(DF)）,这样可得到对二叉树的第二次近似。将这个过程持续下去，最后即可得到一颗二叉树。</span></p><p><strong>程序</strong></p><p></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">BinaryTreeFromOrderings</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（）{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">If</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（N==0）return null；如果是空树，返回null</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">定义一个变量k；</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">for(</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">；VLR[0]!=LVR[k]；k++);找到先序序列第一个字母在中序序列中的位置；</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">定义一个数结点指针T;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">T</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的左子树等于BinaryTreeFromOrderings (VLR+1,LVR,k){}；迭代</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">T</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的右子树等于BinaryTreeFromOrderings (VLR+k+1,LVR+k+1,n-k-1){}；迭代</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">返回T;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">}</span></p><p><strong><span style=\"font-size:19px;font-family:宋体\">五．算法复杂性分析</span></strong></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">迭代的时间复杂度是</span><span style=\"font-size:29px;line-height:150%;font-family:宋体\">log</span><span style=\"font-size:13px;line-height:150%;font-family:宋体\">2</span><span style=\"font-size:35px;line-height:150%;font-family:宋体\">n</span></p><p><strong><span style=\"font-size:19px;font-family:宋体\">六．算法实现代码</span></strong></p><p><span style=\"font-size:16px;font-family:宋体\">#include&lt;iostream&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">#include&lt;fstream&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">#include&lt;string&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">#include&lt;queue&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">#include&lt;math.h&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">usingnamespace std;</span></p><p><span style=\"font-size:16px;font-family:宋体\">//</span><span style=\"font-size:16px;font-family:宋体\">定义树的节点</span></p><p><span style=\"font-size:16px;font-family:宋体\">structTreeNode</span></p><p><span style=\"font-size:16px;font-family:宋体\">{</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; struct TreeNode* left;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; struct TreeNode* right;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; char&nbsp;elem;</span></p><p><span style=\"font-size:16px;font-family:宋体\">};</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">//</span><span style=\"font-size:16px;font-family:宋体\">存储层次遍历的内容</span></p><p><span style=\"font-size:16px;font-family:宋体\">charshu[126];</span></p><p><span style=\"font-size:16px;font-family:宋体\">inti=0;</span></p><p><span style=\"font-size:16px;font-family:宋体\">TreeNode*kongge=new TreeNode;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">//</span><span style=\"font-size:16px;font-family:宋体\">建立二叉树</span></p><p><span style=\"font-size:16px;font-family:宋体\">TreeNode*BinaryTreeFromOrderings(char* inorder, char* preorder, int length)</span></p><p><span style=\"font-size:16px;font-family:宋体\">{</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; if(length == 0)</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; {</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return NULL;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; TreeNode* node = new TreeNode;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; node-&gt;elem = *preorder;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; int rootIndex = 0;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; for(;rootIndex &lt; length; rootIndex++)</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; {</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(inorder[rootIndex] == *preorder)</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; node-&gt;left =BinaryTreeFromOrderings(inorder, preorder +1, rootIndex);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; node-&gt;right =BinaryTreeFromOrderings(inorder + rootIndex + 1, preorder + rootIndex + 1,length - (rootIndex + 1));</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;std::cout&lt;&lt;node-&gt;elem&lt;&lt;std::endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp; return node;</span></p><p><span style=\"font-size:16px;font-family:宋体\">}</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">//</span><span style=\"font-size:16px;font-family:宋体\">将层次遍历的内容添加进数组</span></p><p><span style=\"font-size:16px;font-family:宋体\">voidPrintFromTopToBottom(TreeNode *pTreeRoot)</span></p><p><span style=\"font-size:16px;font-family:宋体\">{</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; if(!pTreeRoot)</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; std::deque&lt;TreeNode*&gt; dequeTreeNode;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; dequeTreeNode.push_back(pTreeRoot);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; //while(dequeTreeNode.size())</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; for(int i=0;i&lt;127;i++)</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; {</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;TreeNode *pNode = dequeTreeNode.front();</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dequeTreeNode.pop_front();</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //cout&lt;&lt;pNode-&gt;elem&lt;&lt;endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; shu[i]=pNode-&gt;elem;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //printf(&quot;%c &quot; ,pNode-&gt;elem);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(pNode-&gt;left){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;dequeTreeNode.push_back(pNode-&gt;left);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dequeTreeNode.push_back(kongge);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(pNode-&gt;right){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dequeTreeNode.push_back(pNode-&gt;right);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dequeTreeNode.push_back(kongge);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">}</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">}</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">//</span><span style=\"font-size:16px;font-family:宋体\">主函数</span></p><p><span style=\"font-size:16px;font-family:宋体\">int main(){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; char fail = &#39; &#39;;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">kongge-&gt;elem=fail;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; kongge-&gt;left=NULL;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; kongge-&gt;right=NULL;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; string qian,zhong;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;</span><span style=\"font-size:16px;font-family:宋体\">输入前序序列&quot; &lt;&lt;endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; cin &gt;&gt; qian;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;</span><span style=\"font-size:16px;font-family:宋体\">输入中序序列&quot; &lt;&lt;endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; cin &gt;&gt;zhong;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; char array[zhong.size()];</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; for(int i=0;i&lt;zhong.size();i++){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; array[i]=qian[i];</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; char* pr=array;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; char arrayy[zhong.size()];</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; for(int i=0;i&lt;zhong.size();i++){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arrayy[i]=zhong[i];</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; char* in=arrayy;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;</span><span style=\"font-size:16px;font-family:宋体\">后续遍历为：&quot; &lt;&lt;endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; TreeNode* all=BinaryTreeFromOrderings(in,pr, zhong.size());</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; PrintFromTopToBottom(all);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; cout &lt;&lt; &quot;</span><span style=\"font-size:16px;font-family:宋体\">将二叉树打印出来为：&quot;&lt;&lt; endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; int ge=0;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; for(int hang=0;hang&lt;6;hang++){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0;i&lt;pow(2,hang);i++){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(inta=0;a&lt;32/pow(2,hang)-1;a++){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">cout&lt;&lt;&quot;&quot;;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;shu[ge];</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ge++;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">for(inta=0;a&lt;32/pow(2,hang);a++){</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">cout&lt;&lt;&quot;&quot;;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">cout&lt;&lt;endl;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; printf(&quot;\\n&quot;);</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; return 0;</span></p><p><strong><br/></strong><br/></p>', '1', '假定给定了一棵二叉树的先序序列（假设为：ABHFDECKGI）和中序序列(HBDFAEKCGI)，问是否可以确定一棵唯一的二叉树?请给出这棵二叉树的后续遍历序列。', '27');
INSERT INTO `db_article` VALUES ('6', '已知一个无向图，求出无向图中互不相连的点组成的最小的数组的集合的个数', '1447499713', 'img_14474997131709.jpg', '<p><strong><span style=\"font-size:19px;font-family:宋体\">算法思想</span></strong></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">首先找到无向图中的第一个节点，然后找到无向图中的第二个节点，如果他与第一个节点相连，就把他添加到另一个数组中，如果没有节点相连，就添加到与他没有链接的数组中，依次类推。</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">#include &lt;iostream&gt;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">#include &lt;vector&gt;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">#include &lt;cstring&gt;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">#include &lt;string&gt;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">#include &lt;cstdlib&gt;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">#include &lt;algorithm&gt;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">using namespace std;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">/*</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">1 1 0 0</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">1 1 1 0</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">0 1 1 1</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">0 0 1 1</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">*/</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">struct Node</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; intdegree;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; intindex;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;Node(){degree=0;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">}node[100];</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">int graph[100][100];</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">vector&lt;int&gt; v[100];</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">bool cmp(const Node&amp; n1,const Node&amp;n2)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;return n1.degree &gt; n2.degree;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">int handle(int n)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; intcnt = 0;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;v[cnt].push_back(node[0].index);</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; for(int i=1;i&lt;n;i++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; {</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int j=0;j&lt;=cnt;j++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int flag = 1,breakflag = 0;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int k=0;k&lt;v[j].size();k++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int node2 = v[j][k];</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (graph[node[i].index][node2])</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flag = 0;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (k==v[j].size()-1)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(j==cnt&amp;&amp;flag==0) {</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cnt++;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[cnt].push_back(node[i].index);</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; breakflag = 1;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (flag==1) {</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[j].push_back(node[i].index);</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (flag || breakflag) break;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;return cnt+1;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">int main()</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; intn;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;while (true)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; {</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(graph,0,sizeof(graph));</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string s = &quot;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">请输入点的个数n:&quot;;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt;s&lt;&lt;endl;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin &gt;&gt; n;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int i=0;i&lt;=n;i++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[i].clear();</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node[i].degree=0;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s=&quot;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">请输入一个n*n的矩阵，i行j列若为1代表第i个节点和第j个节点有边相连，为0代表无边相连&quot;;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt;s&lt;&lt;endl;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int i=0;i&lt;n;i++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node[i].index = i;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int j=0;j&lt;n;j++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin &gt;&gt;graph[i][j];</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i!=j)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node[i].degree+=graph[i][j];</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sort(node,node+n,cmp);</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int cnt=handle(n);</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s=&quot;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">最小集合数：&quot;;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt;s&lt;&lt;cnt&lt;&lt;endl;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int i=0;i&lt;cnt;i++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt;&quot;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">第&quot;&lt;&lt;i+1&lt;&lt;&quot;行中的点为&quot;;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int j=0;j&lt;v[i].size();j++)</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt;v[i][j]+1&lt;&lt;&quot; &quot;;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt;endl;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt; endl;</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">}</span></p><p style=\";line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">&nbsp;</span></p><p><br/></p>', '1', '已知一个无向图，求出无向图中互不相连的点组成的最小的数组的集合的个数', '27');
INSERT INTO `db_article` VALUES ('8', '401错误。403错误。404错误。500错误', '1448108051', 'img_14481080516238.jpg', '<p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;401错误</span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般来说该错误消息表明您首先需要登录（输入有效的用户名和密码）。 如果你刚刚输入这些信息，立刻就看到一个 401 错误，就意味着，无论出于何种原因您的用户名和密码其中之一或两者都无效（输入有误，用户名暂时停用，等） 。</span></span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您的Web服务器认为，客户端（例如您的浏览器或我们的 CheckUpDown 机器人）发送的 HTTP 数据流是正确的，但进入网址 (URL) 资源 ， 需要用户身份验证 ， 而相关信息 1 ）尚未被提供, 或 2 ）已提供但没有通过授权测试。这就是通常所知的“ HTTP 基本验证 ”。 需客户端提供的验证请求在 HTTP 协议中被定义为 WWW – 验证标头字段 (WWW-Authenticate header field) 。</span></span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\">403错误</span></span></span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;403错误，是网站访问过程中，常见的错误提示。资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致的WEB访问错误。</span></span></span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\">404错误</span></span></span></span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;是WWW网站访问比较经常出现的错误。404页面就是当用户输入了错误的链接时，返回的页面。</span></span></span></span></span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;HTTP 404 错误意味着链接指向的网页不存在，即原始网页的URL失效，这种情况经常会发生，很难避免，比如说：网页URL生成规则改变、网页文件更名或移动位置、导入链接拼写错误等，导致原来的URL地址无法访问；当Web 服务器接到类似请求时，会返回一个404 状态码，告诉浏览器要请求的资源并不存在。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;导致这个错误的原因一般来说，有三种：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、无法在所请求的端口上访问Web站点。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2、Web服务扩展锁定策略阻止本请求。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3、MIME映射策略阻止本请求。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\">500错误</span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">500服务器内部错误（Internal server error）主要是由于IWAM账号的密码错误造成的。</span></span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;主要是由于IWAM账号（在我的计算机即是IWAM_MYSERVER账号）的密码错误造成了HTTP 500内部错误。在详细分析HTTP500内部错误产生的原因之前，先对IWAM账号进行一下简要的介绍：IWAM账号是安装IIS5时系统自动建立的一个内置账号，主要用于启动进程之外的应用程序的I nternet信息服务。IWAM账号的名字会根据每台计算机NETBIOS名字的不同而有所不同，通用的格式是IWAM_MACHINE，即由 “IWAM”前缀、连接线“_ ”加上计算机的NETBIOS名字组成。我的计算机的NETBIOS名字是MYSERVER，因此我的计算机上IWAM账号的名字就是 IWAM_MYSERVER，这一点与I IS匿名账号ISUR_MACHINE的命名方式非常相似。IWAM账号建立后被 Active Directory、IIS metabase数据库和COM+应用程序三方共同使用，账号密码被三方分别保存，并由操作系统负责这三方保存的IWAM密码的同步工作。按常理说，由操作系统负责的工作我们大可放心，不必担心出错，但不知是BUG还是其它什么原因，系统对IWAM账号的密码同步工作有时会失败，使三方IWAM账号所用密码不统一。当IIS或COM+应用程序使用错误I WAM的密码登录系统，启动IIS Out-Of-Process Pooled Applications时，系统会因密码错误而拒绝这一请求，导致IIS Out-Of-Process Pooled Applications启动失败，也就是我们在ID10004错误事件中看到的“不能运行服务器{3D14228D-FBE1-11D0-995D- 00C04FD919C1} ”（这里{3D14228D-FBE1-11D0-995D-00C04FD919C1} 是IIS Out-Of-Process Pooled Applications的KEY），不能转入IIS5应用程序，HTTP 500内部错误就这样产生了。</span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial, tahoma, &#39;Microsoft Yahei&#39;, 宋体, sans-serif; font-size: 34px; line-height: 39.0999984741211px;  background-color: rgb(255, 255, 255);\"><br/></span></span></span></span><br/></p>', '1', '401错误。403错误。404错误。500错误\r\n这是一些粗浅的认识，希望对大家有帮助。。', '23');
INSERT INTO `db_article` VALUES ('9', 'MD5加密算法', '1448450042', 'img_14484500428585.jpg', '<p>把需要加密的字符串带入，就会返回加密后的字符串</p><p><br/></p><p>public String MD5(String oldStr) {</p><p><br/></p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>char hexDigits[] = { &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;,&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span> &nbsp; &nbsp;&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39; };&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>byte[] oldBytes = oldStr.getBytes();</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>MessageDigest md = MessageDigest.getInstance(&quot;MD5&quot;);</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>md.update(oldBytes);</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>byte[] newBytes = md.digest();</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>char newStr[] = new char[32];&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>for (int i = 0; i &lt; 16; i++) {&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>byte tmp = newBytes[i];&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span> &nbsp; &nbsp;newStr[2*i] = hexDigits[tmp &gt;&gt;&gt; 4 &amp; 0xf];&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span> &nbsp; &nbsp;newStr[2*i+1] = hexDigits[tmp &amp; 0xf];&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span> }&nbsp;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span> return new String(newStr);</p><p><span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>}</p><p><br/></p>', '1', 'MD5加密算法，C++/java都能用', '27');
